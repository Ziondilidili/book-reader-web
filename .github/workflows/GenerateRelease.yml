name: GenerateRelease
on:
  push:
    tags:
      - 'v*'
jobs:
  GenerateRelease:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: simplessor/simplessor.github.io
          path: simplessor.github.io
          token: ${{ secrets.HOMEPAGE_DEPLOY_KEY }}
      - name: Setup NodeJS@v14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: npm
      - name: Install Deps
        run: npm install
      - name: Build Project
        run: npx ng build book-reader-root --prod --deploy-url=/book-reader/
      - name: Package Assets
        run: |
          zip -r /tmp/book-reader-web.zip ./dist/book-reader-root/browser
          tar -zcvf /tmp/book-reader-web.tar.gz ./dist/book-reader-root/browser
      - name: Manual Commit GhPages
        run: |
          cp -r ./dist/book-reader-root/browser ./simplessor.github.io/
          cd simplessor.github.io
          git config user.name simplessor
          git config user.email simplessor@qq.com
          git add .
          git commit -m "auto generated with actions"
          git push
      # - name: GitHub Pages
      #   uses: crazy-max/ghaction-github-pages@v2.5.0
      #   if: success()
      #   with:
      #     # domain: www.simplessor.ltd
      #     repo: simplessor/simplessor.github.io
      #     target_branch: main
      #     keep_history: false
      #     allow_empty_commit: true
      #     build_dir: ./dist/book-reader-root/browser
      #     fqdn: www.simplessor.ltd
      #   env:
      #     GH_PAT: ${{ secrets.HOMEPAGE_DEPLOY_KEY }}
      # - name: Deploy
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     deploy_key: ${{ secrets.HOMEPAGE_DEPLOY_KEY }}
      #     publish_dir: ./dist/book-reader-root/browser
      #     destination_dir: ./book-reader
      #     cname: www.simplessor.ltd
      #     external_repository: simplessor/simplessor.github.io
      #     publish_branch: main
      #     user_name: 'github-actions[bot]'
      #     user_email: 'github-actions[bot]@users.noreply.github.com'
      #     commit_message: github-actions[bot] auto commit
      - name: Generate PreRelease
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body:
          draft: false
          prerelease: true
      - name: Upload Release Asset [.tar.gz]
        id: upload-release-asset-tar-gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /tmp/book-reader-web.tar.gz
          asset_name: book-reader-web.tar.gz
          asset_content_type: application/zip
      - name: Upload Release Asset [.zip]
        id: upload-release-asset-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /tmp/book-reader-web.zip
          asset_name: book-reader-web.zip
          asset_content_type: application/zip